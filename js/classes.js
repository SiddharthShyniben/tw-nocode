export const classNames = {
  button: ["text-white", "px-3", "opacity-70", "hover:opacity-100"],
  input: [
    "bg-gray-50",
    "border",
    "border-gray-300",
    "text-gray-900",
    "text-sm",
    "rounded-lg",
    "focus:ring-blue-500",
    "focus:border-blue-500",
    "block",
    "w-full",
    "p-2.5",
    "dark:bg-gray-700",
    "dark:border-gray-600",
    "dark:placeholder-gray-400",
    "dark:text-white",
    "dark:focus:ring-blue-500",
    "dark:focus:border-blue-500",
  ],
  label: [
    "block",
    "mb-2",
    "text-sm",
    "font-medium",
    "text-gray-900",
    "dark:text-white",
  ],
  select: [
    "bg-gray-50",
    "border",
    "border-gray-300",
    "text-gray-900",
    "text-sm",
    "rounded-lg",
    "focus:ring-blue-500",
    "focus:border-blue-500",
    "block",
    "w-full",
    "p-2.5",
    "dark:bg-gray-700",
    "dark:border-gray-600",
    "dark:placeholder-gray-400",
    "dark:text-white",
    "dark:focus:ring-blue-500",
    "dark:focus:border-blue-500",
    "z-[99999]",
    "mb-3",
  ],
};

export const componentClasses = {
  button: (background) => [
    "muy-stop-propagation",
    `bg-${background}-500`,
    `hover:bg-${background}-700`,
    "text-white",
    "font-bold",
    "pt-2",
    "pb-2",
    "pl-4",
    "pr-4",
    "rounded",
  ],
  buttonGroup: ["inline-flex", "rounded-md", "shadow-sm"],
  container: ["container", "mx-auto"],
  columns: (number, gap) =>
    `columns-${number}${gap ? `gap-${gap}` : ""}`.split(" "),
  box: (shadow) => "shadow" + (shadow ? "-" + shadow : ""),
  heading: (level) =>
    level == 1
      ? [
          "muy-editable",
          "mb-4",
          "text-4xl",
          "font-extrabold",
          "leading-none",
          "tracking-tight",
          "text-gray-900",
          "md:text-5xl",
          "lg:text-6xl",
          "dark:text-white",
        ]
      : level > 1 && level < 6
        ? [
            `text-${6 - level == 1 ? "" : 6 - level}xl`,
            "font-extrabold",
            "dark:text-white",
          ]
        : ["text-lg", "font-bold", "dark:text-white"],
  navbar: ["bg-white", "border-gray-200", "dark:bg-gray-900"],
  navbarInner: [
    "max-w-screen-xl",
    "flex",
    "flex-wrap",
    "items-center",
    "justify-between",
    "mx-auto",
    "p-4",
  ],
  heroLink: ["flex", "items-center", "space-x-3", "rtl:space-x-reverse"],
  heroText: [
    "self-center",
    "text-2xl",
    "font-semibold",
    "whitespace-nowrap",
    "dark:text-white",
  ],
  burger: [
    "inline-flex",
    "items-center",
    "p-2",
    "w-10",
    "h-10",
    "justify-center",
    "text-sm",
    "text-gray-500",
    "rounded-lg",
    "md:hidden",
    "hover:bg-gray-100",
    "focus:outline-none",
    "focus:ring-2",
    "focus:ring-gray-200",
    "dark:text-gray-400",
    "dark:hover:bg-gray-700",
    "dark:focus:ring-gray-600",
  ],
  navLinks: ["hidden", "w-full", "md:block", "md:w-auto"],
  navUl: [
    "font-medium",
    "flex",
    "flex-col",
    "p-4",
    "md:p-0",
    "mt-4",
    "border",
    "border-gray-100",
    "rounded-lg",
    "bg-gray-50",
    "md:flex-row",
    "md:space-x-8",
    "rtl:space-x-reverse",
    "md:mt-0",
    "md:border-0",
    "md:bg-white",
    "dark:bg-gray-800",
    "md:dark:bg-gray-900",
    "dark:border-gray-700",
  ],
  navLink: [
    "block",
    "py-2",
    "px-3",
    "text-white",
    "bg-blue-700",
    "rounded",
    "md:bg-transparent",
    "md:text-blue-700",
    "md:p-0",
    "dark:text-white",
    "md:dark:text-blue-500",
  ],
};
